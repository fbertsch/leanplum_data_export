# These environment variables must be set in CircleCI UI
#
# GCLOUD_SERVICE_KEY - key for pushing images to gcr
# GOOGLE_PROJECT_ID - moz-fx-data-airflow-prod-88e0
# GOOGLE_COMPUTE_ZONE - us-west1-b
#

####################
# CircleCI configuration reference:
#   https://circleci.com/docs/2.0/configuration-reference
####################

version: 2

#####################################################
# Jobs: see https://circleci.com/docs/2.0/jobs-steps/
#####################################################

jobs:
  build:
    docker:
      - image: docker:stable-git
    working_directory: ~/mozilla/leanplum-data-export
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t app:build .

      # save the built docker container into CircleCI's cache. This is
      # required since Workflows do not have the same remote docker instance.
      - run:
          name: docker save app:build
          command: mkdir -p /cache; docker save -o /cache/docker.tar "app:build"
      - save_cache:
          key: v1-{{ .Branch }}-{{epoch}}
          paths:
            - /cache/docker.tar

  test:
    docker:
      - image: docker:18.02.0-ce
    steps:
      - setup_remote_docker
      - restore_cache:
          key: v1-{{.Branch}}
      - run:
          name: Restore Docker image cache
          command: docker load -i /cache/docker.tar
      - run:
          name: Test Code
          command: docker run app:build test
      - run:
          name: Lint Code
          command: docker run app:build flake8 leanplum_data_export/

  deploy:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/mozilla/leanplum-data-export
    steps:
      - setup_remote_docker
      - restore_cache:
          key: v1-{{.Branch}}
      - run:
          name: Restore Docker image cache
          command: docker load -i /cache/docker.tar
      - run:
          name: Configure gcloud
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud auth configure-docker
      - run:
          name: Deploy to GCR
          command: |
            DOCKER_IMAGE="gcr.io/${GOOGLE_PROJECT_ID}/leanplum-data-export"
            # Deploy main
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker tag app:build "${DOCKER_IMAGE}:latest"
              docker push "${DOCKER_IMAGE}:latest"
            elif  [ ! -z "${CIRCLE_TAG}" ]; then
            # Deploy a release tag...
              echo "${DOCKER_IMAGE}:${CIRCLE_TAG}"
              docker tag app:build "${DOCKER_IMAGE}:${CIRCLE_TAG}"
              docker images
              docker push "${DOCKER_IMAGE}:${CIRCLE_TAG}"
            fi

#########################################################
# Workflows: see https://circleci.com/docs/2.0/workflows/
#########################################################

workflows:
  version: 2
  commit:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - test:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - deploy:
          requires:
            - build
            - test
          filters:
            tags:
              only: /.*/
            branches:
              only: main
